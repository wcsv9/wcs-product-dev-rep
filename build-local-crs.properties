#-----------------------------------------------------------------
# Licensed Materials - Property of IBM
#
# WebSphere Commerce
#
# (C) Copyright IBM Corp. 2007, 2011 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#-----------------------------------------------------------------

##
# These properties provide general settings to the build process. The original
# template file for these properties is <varname>WCBD_installdir</varname>\
# <filepath>/wcbd-build.properties.template</filepath>.
#
# @title
#   Build configuration properties
#

#===============================================================================
# CONFIGURATION: Change the properties in this file as appropriate. Refer to the
# property comments or the WebSphere Commerce Knowledge Center for
# configuration details.
#===============================================================================

#===============================================================================
# General WCBD build properties
#===============================================================================

##
# The application type that will be built.  The selected application type will 
# cause the build process to use different paths when compiling and packaging 
# the output.
# 
# @valid-values
#   <ul>
#     <li>ts - represents the Transaction application, i.e. ts.ear</li>
#     <li>search - represents the Search application, i.e. search.ear</li>
#     <li>crs - represents a separated store application, i.e. crs.ear</li>
#   </ul>
#
# @default
#     ts
#
# This no longer needed, the app type must be specified as parameter when running the wcbd build
# e.g.  -Dapp.type=ts

##
# The directory where unit test libraries (such as JUnit) that the build process
# requires to compile unit test code are kept. Note that this property has been
# deprecated in favor of the more flexible ${ext.compile.class.path}.
#
# @default
#   ${basedir}/ut-lib
#
# @deprecated
#   7.0.0.2
#
unit.test.lib.dir=${basedir}/ut-lib

##
# The directory to which source code is extracted. By default, the source
# directory path is associated with a particular build as specified by
# ${build.label}. If you intend to use the repository update feature that some
# SCMs such as CVS and Subversion provides, you must set this property to a
# static value without reference to ${build.label}.
#
# @default
#   ${basedir}/source/${build.label}
#
source.dir=${basedir}/source/${build.label}

##
# The directory in ${source.dir} where the modules are located. The structure of
# this directory corresponds to the WebSphere Commerce Developer workspace, as
# explained in the &quot;WebSphere Commerce Build and Deployment tool repository
# structure&quot; topic in the WebSphere Commerce Knowledge Center.
#
# @default
#   ${source.dir}/workspace
#
module.dir=${source.dir}/

##
# The distribution directory where deployment packages are created.
#
# @default
#   ${basedir}/dist
#
dist.dir=${basedir}/dist

##
# The distribution directory where server deployment packages are created.
#
# @default
#   ${dist.dir}/server
#
dist.server.dir=${dist.dir}/server

##
# The distribution directory where toolkit deployment packages are created.
#
# @default
#   ${dist.dir}/toolkit
#
dist.toolkit.dir=${dist.dir}/toolkit

##
# The build log directory.
#
# @default
#   ${basedir}/logs/${build.type.prefix}${build.label}-${tstamp}
#
log.dir=${basedir}/logs/${build.type.prefix}${build.label}-${tstamp}

##
# The build log file.
#
# @default
#   ${log.dir}/wcbd-build.log
#
log.file=${log.dir}/wcbd-build.log

##
# The zip file which contains build logs that are attached to build failure
# notifications.
#
# @default
#   ${log.dir}/wcbd-build-log-${build.label}.zip
#
log.zip.file=${log.dir}/wcbd-build-log-${build.label}.zip

##
# The working directory used to store temporary files that are generated by the
# build process.
#
# @default
#   ${basedir}/working
#
working.dir=${basedir}/working

##
# The working directory for compilation.
#
# @default
#   ${working.dir}/compile
#
working.compile.dir=${working.dir}/compile

##
# The working directory for archiving module binaries.
#
# @default
#   ${working.dir}/archive
#
working.archive.dir=${working.dir}/archive

##
# The working directory for creating server deployment packages.
#
# @default
#   ${working.dir}/package/server
#
working.package.server.dir=${working.dir}/package/server

##
# The working directory for creating toolkit deployment packages.
#
# @default
#   ${working.dir}/package/toolkit
#
working.package.toolkit.dir=${working.dir}/package/toolkit

##
# The directory that contains class files that are packaged into the modules.
# This is generally used for Java EE modules that are imported from binary
# archives.
#
# @default
#   ImportedClasses
#
imported.classes.dir=ImportedClasses

##
# The comma-separated list of connector modules to be built. Leave the value
# of this property empty if no such modules need to be built.
#
# @example
#   TestConnector1,TestConnector2
#
connector.module.list=

##
# The Java source directory of connector modules.
#
# @default
#   connectorModule
#
connector.src.dir=connectorModule

##
# The Java binary directory of connector modules.
#
# @default
#   connectorModule
#
connector.bin.dir=connectorModule

##
# The comma-separated list of EJB modules to be built. Leave the value of this
# property empty if no such modules need to be built.
#
# @example
#   WebSphereCommerceServerExtensionsData,TestEJB1
#
ejb.module.list=

##
# The Java source directory of EJB modules.
#
# @default
#   ejbModule
#
ejb.src.dir=ejbModule

##
# The Java binary directory of EJB modules.
#
# @default
#   ejbModule
#
ejb.bin.dir=ejbModule

##
# The comma-separated list of Java utility modules to be built. Leave the value
# of this property empty if no such modules need to be built.
#
# @example
#   WebSphereCommerceServerExtensionsLogic,TestJava1
#
java.module.list=

##
# The Java source directory of Java utility modules.
#
# @default
#   src
#
java.src.dir=src

##
# The Java binary directory of Java utility modules.
#
# @default
#   bin
#
java.bin.dir=bin

##
# The comma-separated list of Web modules to be built. Leave the value of this
# property empty if no such modules need to be built.
#
# @example
#   SiteAdministration,Stores,TestWeb1
#
web.module.list=crs-web

##
# The Java source directory of Web modules.
#
# @default
#   src
#
# @example
# for xc, it is: src/main/java
#
web.src.dir=src

## 
# The Java resource directory of Web modules
#
# @default
#     src
#
# @example
# for xc, it is: src/main/resources
#
web.resource.dir=src

##
# The Java binary directory of Web modules.
#
# @default
#   ${web.content.dir}/WEB-INF/classes
#
web.bin.dir=${web.content.dir}/WEB-INF/classes

##
# The Web content directory of Web modules.
#
# @default
#   WebContent
#
web.content.dir=WebContent

##
# The name of the module that contains data assets.
#
# @default
#   DataLoad
#
data.module.name=DataLoad

##
# The name of the module that contains static Web server assets.
#
# @default
#   StaticWeb
#
static.web.module.name=StaticWeb


##
# The directory that contains customization configuration files.
#
# @default
#   WebSphereCommerceServerExtensionsLogic/configFiles
#
config.files.dir=WebSphereCommerceServerExtensionsLogic/configFiles


##
# The classpath that contains additional class folders and libraries that are
# required for compilation. Note that it is up to the user to ensure that any
# classpath entries that are also required in runtime are available to the
# WC enterprise applciation. In general, such resources also should be made
# available as part of the WC application, so they should be be included merely
# as external classpath entries.
#
# @since
#   7.0.0.2
#
ext.compile.class.path=


#===============================================================================
# Properties for WebSphere Commerce
#===============================================================================

##
# The WebSphere Commerce or WebSphere Commerce Developer installation directory.
#
wc.home=/opt/WebSphere/CommerceServer90/


#===============================================================================
# Properties for WebSphere Application Server (WAS)
#===============================================================================

##
# The WebSphere Application Server installation directory.
#
was.home=/opt/WebSphere/AppServer


#===============================================================================
# Properties for database and ejbdeploy
#===============================================================================

##
# The name of the database vendor which the build processes uses to configure
# the compilation and ejbdeploy classpaths. It should be set to the
# corresponding value for the database vendor type.
#
# @default
#   db2
#
# @valid-values
#   <ul>
#     <li>Derby and DB2: db2</li>
#     <li>Oracle: oracle</li>
#     <li>DB2 for i: os400</li>
#   </ul>
#
db.type=db2

##
# The name of the database vendor which the ejbdeploy utility uses to determine
# database column types, mapping information, DDL, and other information. The
# value should correspond to the database backend ID that the EJB projects use
# in your customization. Otherwise, the ejbdeploy utility will generate a
# top-down mapping based on the EJB metadata, which might not match the actual
# database schema. Whenever possible, you should use a typcial value suggested
# below. If you must use a non-default value, ensure that it is valid according
# to the ejbdeploy utility usage in either the WebSphere Applicaton Server
# Knowledge Center or the command-line interface.
#
# @default
#   DB2UDB_V95
#
# @valid-values
#   <ul>
#     <li>Derby and DB2: DB2UDB_V95</li>
#     <li>Oracle: ORACLE_V11G</li>
#     <li>DB2 for i: DB2UDBISERIES_V54</li>
#   </ul>
#
ejbdeploy.dbvendor=DB2UDB_V95

##
# Whether the Java files generated by the ejbdeploy utility should be kept.
#
# @default
#   false
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
ejbdeploy.codegen=false

##
# Whether the working directory should be kept after the ejbdeploy utility
# completes.
#
# @default
#   false
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
ejbdeploy.keep.generated=false

##
# Whether all but error messages reported by ejbdeploy utility should be
# suppressed. Note that this property does not suppress validation messages,
# which is controlled by ${ejbdeploy.no.validate}.
#
# @default
#   true
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
ejbdeploy.quiet=true

##
# Whether validation messages reported by the ejbdeploy utility should be
# suppressed.
#
# @default
#   true
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
ejbdeploy.no.validate=true

##
# Whether internal tracing for the ejbdeploy utility should be enabled.
#
# @default
#   false
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
ejbdeploy.trace=false

##
# The maximum memory size to be used by the ejbdeploy utility.
#
# @default
#   256M
#
# @since
#   7.0.0.3
#
ejbdeploy.jvm.max.memory=256M


#===============================================================================
# Properties for extraction
#===============================================================================

##
# Whether source code extraction should be done.
#
# @default
#   true
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.extract=true

##
# The Ant build file that is used to extract source code. Refer to the
# documentation for details on creating a custom extract Ant file using the
# template provided.
#
extract.ant.file=${basedir}/extract-local.xml

##
# Whether source code extraction should be done as an updating to the previously
# extracted source code, or as a full extraction after the previously extracted
# source code is deleted. In addition to setting this property to true, the
# following conditions must also be met in order to use this source code update
# mode:
#
# <ul>
#   <li>${source.dir} must be set to a static path, for example,
#   ${basedir}/source.</li>
#   <li>If you have configured the source extraction Ant script using a sample
#   prior to 7.0.0.3, you must re-configure the scripts using the new sample
#   for the appropriate SCM.</li>
# </ul>
#
# @default
#   false
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
extract.update.mode=false


#===============================================================================
# Properties for packaging
#===============================================================================

##
# The comma-separated list of files in ${module.dir}/WC to be included in the
# deployment packages. Leave the value of this property empty to include all
# files.
#
# @example 
# lib/**,properties/**,xml/**
#
# This will only copy the files under the specified directories
#
ear.dir.includes=

##
# The comma-separated list of files in ${module.dir}/WC to be excluded in the
# deployment packages. Leave the value of this property empty to not exclude any
# file.
#
ear.dir.excludes=

##
# The directory that contains deployment scripts to be included in the server
# deployment package.
#
# @default
#   ${basedir}/deploy/server
#
deploy.server.dir=${basedir}/deploy/server

##
# The directory that contains deployment scripts to be included in the toolkit
# deployment package.
#
# @default
#   ${basedir}/deploy/toolkit
#
deploy.toolkit.dir=${basedir}/deploy/toolkit

##
# Whether a server deployment package should be created.
#
# @default
#   true
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.package.server=true

##
# Whether a toolkit deployment package should be created.
#
# @default
#   true
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.package.toolkit=true

##
# Whether to convert the newline characters contained in the files in the server
# deployment package from DOS format (CRLF) to UNIX format (CR). This should be
# set to true if server deployment is run on a UNIX system, since some UNIX
# shells cannot process the extraneous LF character that is part of the DOS
# format newline character, resulting in syntax errors.
#
# @default
#   false
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.dos2unix=false

##
# The comma-separated list of files in ${working.package.dir}/server to be
# included for dos2unix conversion. All shell scripts should be included at a
# minimum and binary files should not be included, otherwise they may become
# corrupted.
#
# @default
#   setenv,wcbd-ant,wcbd-encode-properties,wcbd-setenv.template
#
dos2unix.includes=setenv,wcbd-ant,wcbd-encode-properties,wcbd-setenv.template

##
# The comma-separated list of files in ${working.package.dir}/server to be
# excluded from dos2unix conversion. Leave the value of this property empty to
# not exclude any file.
#
dos2unix.excludes=

#===============================================================================
# Properties for centralized server deployment
#===============================================================================

##
# Whether centralized server deployment should be run.
#
# @default
#   false
#
# @since
#   7.0.0.2
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.deploy.server=false

##
# The directory where server deployment packages are installed for centralized
# server deployment.
#
# @default
#   ${basedir}/deploy-server-workspace
#
# @since
#   7.0.0.2
#
deploy.server.workspace.dir=${basedir}/deploy-server-workspace

##
# The comma-separated list of identifiers for target environments against which
# centralized server deployment is run.
#
# @since
#   7.0.0.2
#
deploy.server.target.env.list=

##
# The command that invokes the server deployment process. Unless customized,
# the command is typically wcbd-ant.bat for Windows, or wcbd-ant for all other
# platforms.
#
# @default
#   wcbd-ant
#
# @since
#   7.0.0.2
#
deploy.server.command=wcbd-ant

##
# The command-line arguments to pass into ${deploy.server.command}. By default,
# the <codeph>-Dtarget.env=</codeph><varname>target-env</varname> argument is
# automatically passed in based on the values in
# ${deploy.server.target.env.list}, so it should not be included in this
# property.
#
# @default
#   -buildfile wcbd-deploy.xml
#
# @since
#   7.0.0.2
#
deploy.server.command.args=-buildfile wcbd-deploy.xml


#===============================================================================
# Properties for post-build clean-up
#===============================================================================

##
# Whether the working directory should be cleaned at the end of the build
# process.
#
# @default
#   false
#
# @since
#   7.0.0.3
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.clean.working.dir=false


#===============================================================================
# Properties for build status notifications
#===============================================================================

##
# Whether build success notifications should be sent.
#
# @default
#   false
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.mail.success=false

##
# Whether build failure notifications should be sent.
#
# @default
#   false
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
run.mail.failure=false

##
# The sender e-mail address of build status notifications.
#
mail.from=

##
# The comma-separated list of e-mail addresses that receive build success
# notifications.
#
mail.success.tolist=

##
# The comma-separated list of e-mail addresses that receive build failure
# notifications.
#
mail.failure.tolist=

##
# The host name of the SMTP server.
#
mail.mailhost=

##
# The TCP port of the SMTP server.
#
# @default
#   25
#
mail.mailport=25

##
# Whether the SMTP server uses TLS/SSL for encryption.
#
# @default
#   false
#
# @valid-values
#   <ul>
#     <li>true</li>
#     <li>false</li>
#   </ul>
#
mail.ssl=false

##
# The subject of build success notifications.
#
# @default
#   WCBD Build Successful: ${build.label}
#
mail.success.subject=WCBD Build Successful: ${build.label}

##
# The subject of build failure notifications.
#
# @default
#   WCBD Build FAILED: ${build.label}
#
mail.failure.subject=WCBD Build FAILED: ${build.label}

##
# The message body of build success notifications.
#
mail.success.message=

##
# The message body of build failure notifications.
#
# @default
#   Check attached logs for details.
#
mail.failure.message=Check attached logs for details.


#===============================================================================
# CUSTOMIZATION: Add new properties required by customization below.
#===============================================================================
