<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2007, 2017 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>
<%--
*****
This JSP file is a fragment that displays the Billing Information section of the Shipping and Billing page of the store.
The section lets shoppers enter the payment information for their orders. It supports 3 separate payment methods in an
order.
*****
--%>
<!-- BEGIN CheckoutPaymentsAndBillingAddress.jspf -->

<script type="text/javascript">
	<flow:ifEnabled feature="Analytics">
		analyticsJS.loadPaymentPageView(CheckoutPayments);
	</flow:ifEnabled>

	var paymentSnippetsURLMap = {};
	<c:forEach var="payment" varStatus="paymentCounter" items="${usablePaymentInfo.usablePaymentInformation}">
		<c:if test="${payment.paymentMethodName != 'PayInStore'}">
			paymentSnippetsURLMap['<c:out value="${payment.paymentMethodName}" />'] = '<c:out value="${payment.xumet_attrPageName}" />';
		</c:if>
	</c:forEach>
	
	$(document).ready(function(){
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT" var="EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT" var="EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_ACCOUNT_NUMBER" var="EDPPaymentMethods_NO_ACCOUNT_NUMBER"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_INVALID_EXPIRY_DATE" var="EDPPaymentMethods_INVALID_EXPIRY_DATE"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_AMOUNT" var="EDPPaymentMethods_NO_AMOUNT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_AMOUNT_NAN" var="EDPPaymentMethods_AMOUNT_NAN"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_AMOUNT_LT_ZERO" var="EDPPaymentMethods_AMOUNT_LT_ZERO"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_BILLING_ADDRESS" var="EDPPaymentMethods_NO_BILLING_ADDRESS"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_BILLING_ADDRESS_INVALID" var="EDPPaymentMethods_BILLING_ADDRESS_INVALID"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_CVV_NOT_NUMERIC" var="EDPPaymentMethods_CVV_NOT_NUMERIC"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM" var="EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_PAYMENT_SELECTED" var="EDPPaymentMethods_NO_PAYMENT_SELECTED"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_ROUTING_NUMBER" var="EDPPaymentMethods_NO_ROUTING_NUMBER"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_BANK_ACCOUNT_NO" var="EDPPaymentMethods_NO_BANK_ACCOUNT_NO"/>
		<fmt:message bundle="${storeText}" key="PROMOTION_CODE_EMPTY" var="PROMOTION_CODE_EMPTY"/>
		<fmt:message bundle="${storeText}" key="PO_Number" var="PO_Number"/>
		<fmt:message bundle="${storeText}" key="ERROR_PONumberEmpty" var="ERROR_PONumberEmpty"/>
		<fmt:message bundle="${storeText}" key="ERROR_PONumberTooLong" var="ERROR_PONumberTooLong"/>

		CheckoutPayments.setErrorMessage("EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT", <wcf:json object="${EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT", <wcf:json object="${EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_ACCOUNT_NUMBER", <wcf:json object="${EDPPaymentMethods_NO_ACCOUNT_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_INVALID_EXPIRY_DATE", <wcf:json object="${EDPPaymentMethods_INVALID_EXPIRY_DATE}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_AMOUNT", <wcf:json object="${EDPPaymentMethods_NO_AMOUNT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_AMOUNT_NAN", <wcf:json object="${EDPPaymentMethods_AMOUNT_NAN}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_AMOUNT_LT_ZERO", <wcf:json object="${EDPPaymentMethods_AMOUNT_LT_ZERO}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_BILLING_ADDRESS", <wcf:json object="${EDPPaymentMethods_NO_BILLING_ADDRESS}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_BILLING_ADDRESS_INVALID", <wcf:json object="${EDPPaymentMethods_BILLING_ADDRESS_INVALID}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_CVV_NOT_NUMERIC", <wcf:json object="${EDPPaymentMethods_CVV_NOT_NUMERIC}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM", <wcf:json object="${EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_PAYMENT_SELECTED", <wcf:json object="${EDPPaymentMethods_NO_PAYMENT_SELECTED}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_ROUTING_NUMBER", <wcf:json object="${EDPPaymentMethods_NO_ROUTING_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_BANK_ACCOUNT_NO", <wcf:json object="${EDPPaymentMethods_NO_BANK_ACCOUNT_NO}"/>);
		CheckoutPayments.setErrorMessage("PROMOTION_CODE_EMPTY", <wcf:json object="${PROMOTION_CODE_EMPTY}"/>);
		CheckoutPayments.setErrorMessage("PO_NUMBER", <wcf:json object="${PO_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("ERROR_PONumberEmpty", <wcf:json object="${ERROR_PONumberEmpty}"/>);
		CheckoutPayments.setErrorMessage("ERROR_PONumberTooLong", <wcf:json object="${ERROR_PONumberTooLong}"/>);

		CheckoutPayments.setLocale('<c:out value='${locale}'/>');
		CheckoutPayments.initializeOverallPaymentObjects();
		CheckoutPayments.initializePaymentAreaDataDirtyFlags();

	});
</script>
<%@ include file="POSnippet.jspf" %>
<c:forEach var="paymentInstance" varStatus="paymentInstructionCounter" items="${paymentInstruction.paymentInstruction}">
	<c:if test="${!empty existingPI}">
		<c:set var="existingPI" value="${existingPI},"/>
	</c:if>
	<c:set var="existingPI" value="${existingPI}${paymentInstance.piId}"/>
	
	<%-- Unbound payment instructions --%>
	<c:if test="${paymentInstance.piAmount == '0.00000'}">
		<c:if test="${!empty unboundPI}">
			<c:set var="unboundPI" value="${unboundPI},"/>
		</c:if>
		<c:set var="unboundPI" value="${unboundPI}${paymentInstance.piId}"/>
	</c:if>
</c:forEach>

<script type="text/javascript">
	// declarePaymentAreaController defined in ShippingAndBillingControllersDeclaration.js uses this parameter in refreshurl
	var paymentAreaUrlParam = '?storeId=<c:out value="${WCParam.storeId}" />&catalogId=<c:out value="${WCParam.catalogId}" />&langId=<c:out value="${WCParam.langId}" />';
</script>

<c:forEach var="i" begin="1" end="1">
<script type="text/javascript">
$(document).ready(function() { 
	wcService.declare({
		id: "paymentAreaController${i}",
		renderContext: wcRenderContext.getRenderContextProperties("paymentContext"),
		url: "",
		formId: ""

		,modelChangedHandler: function(message, widget) {
			var controller = this;
			var renderContext = this.renderContext;
			
		}

		,renderContextChangedHandler: function(message, widget) {
			var controller = this;
			var renderContext = this.renderContext;
				if (renderContext.properties.currentPaymentArea == <c:out value="${i}"/>) {
					if ((controller.testForChangedRC(["payment${i}"])  || controller.testForChangedRC(["paymentTCId${i}"])
						|| (controller.testForChangedRC(["piAmount"])) && supportPaymentTypePromotions )
					) {
						if (renderContext.properties.payment${i} == "empty") {
							aler(renderContext.properties.payment${i});
							viewName = "EmptySnippetView";
						}
						
						if (renderContext.properties.payment${i} == "PayPal") {
							aler(renderContext.properties.payment${i});
							viewName = "PayPal";
						}else {
							viewName = paymentSnippetsURLMap[renderContext.properties.payment${i}];
						}
						controller.url = viewName + '?storeId=<c:out value="${WCParam.storeId}" />&catalogId=<c:out value="${WCParam.catalogId}" />&langId=<c:out value="${WCParam.langId}" />';
						
						if (supportPaymentTypePromotions) {									
							if (CheckoutPayments.numberOfPaymentMethods != 1) {
								widget.refresh(renderContext.properties);
							} else if (CheckoutPayments.numberOfPaymentMethods == 1 && <c:out value="${i}"/> < 2) {
								widget.refresh(renderContext.properties);
							}
						} else {
							widget.refresh(renderContext.properties);
						}
				  }
				}
		}
		
		,postRefreshHandler: function(widget) {
			/**
				if supportPaymentTypePromotions is true, CheckoutPayments.loadPaymentSnippet should have been called to 
				reload the entire payment refresh area. This will also refresh the amount field. Hence, we don't need to
				call update amount field again	(which will trigger a call to CheckoutPayments.loadPaymentSnippet ).
			**/
			if (!supportPaymentTypePromotions) { 
				var orderTotal = dojo.byId("OrderTotalAmount").value;
				CheckoutPayments.updateAmountFields(orderTotal);
			}
			
			var widgetId = "paymentArea" + "<c:out value="${i}"/>";
			TealeafWCJS.rebind(widgetId);
			
			//reset the billing address id in the billing address context to be the default selected address after payment method refresh
			wcRenderContext.updateContext('billingAddressDropDownBoxContext', {"billingAddress<c:out value="${i}"/>":(document.getElementsByName('billing_address_id'))[<c:out value="${i}"/>-1].value, 'areaNumber':<c:out value="${i}"/>});

			cursor_clear();
		}
		
	});
	
	CheckoutHelperJS.showHideEditBillingAddressLink((document.getElementsByName('billing_address_id'))[<c:out value="${i}"/>-1],<c:out value="${i}"/>);
});
</script>
</c:forEach>

<script type="text/javascript">
wcService.declare({
			id: "orderTotalController",
			renderContext: wcRenderContext.getRenderContextProperties("paymentContext"),
			url: "", //not used. see CheckoutPayments.getTotalInJSON()
			formId: ""
	
			,modelChangedHandler: function(message, widget) {
				var controller = this;
				var renderContext = this.renderContext;
				if(message.actionId in order_updated || message.actionId == 'OrderItemAddressShipMethodUpdate' || message.actionId == 'AjaxPrepareOrderForShipChargeUpdate'
					|| message.actionId == 'OrderItemAddressShipInstructionsUpdate' || message.actionId == 'OrderItemAddressShipInstructionsUpdate1' || message.actionId == 'AjaxUpdateOrderAfterAddressUpdate'
					|| message.actionId == 'AjaxDeleteOrderItemForShippingBillingPage' || message.actionId == 'AjaxUpdateOrderItemsAddressId'){
					//updating the total
					CheckoutPayments.getTotalInJSON();
				}
			}
					
		});
</script>

<!-- We will submit the order in the next page..For now prepare the order and then start the checkOut process..In checkOut process
add all the payment instructions and then redirect user to Order Summary Page.. There we will submit the order and get back
the final confirmation -->

<!-- BillingAddressDropDownDisplay.jspf uses this URL and rendercontext and refreshController -->
<wcf:url var="AddressDisplayURL" value="AjaxAddressDisplayView" type="Ajax">
	<wcf:param name="langId" value="${langId}" />						
	<wcf:param name="storeId" value="${WCParam.storeId}" />
	<wcf:param name="catalogId" value="${WCParam.catalogId}" />
</wcf:url>

<script type="text/javascript">
wcService.declare({
	id: "billingAdddressDisplayAreaController",
	renderContext: wcRenderContext.getRenderContextProperties("billingAddressDropDownBoxContext"),
	url: "${AddressDisplayURL}",
	formId: ""

	,renderContextChangedHandler: function(message, widget) {
		var controller = this;
		var renderContext = this.renderContext;
		
		var areaNumber = renderContext.properties["areaNumber"];	
		var objectId = widget.objectId;
		if (controller.testForChangedRC(["billingAddress"+areaNumber]) && objectId.charAt(objectId.length-1) == areaNumber) {
				var addressId = renderContext.properties["billingAddress"+areaNumber];
				widget.refresh({"addressId": addressId});
			}
		}

	,postRefreshHandler: function(widget) {
		var controller = this;
		var renderContext = this.renderContext;
		
		var areaNumber = renderContext.properties["areaNumber"];
		CheckoutHelperJS.showHideEditBillingAddressLink((document.getElementsByName('billing_address_id'))[areaNumber-1],areaNumber);
		//clears the progress bar set from billingdropdowndisplay.jsp
		cursor_clear();
	}

});
</script>

<!-- We will submit the order in the next page..For now prepare the order and then start the checkOut process..In checkOut process
add all the payment instructions and then redirect user to Order Summary Page.. There we will submit the order and get back
the final confirmation -->
<div class="checkout_subheader" id="WC_ShipmentDisplay_div_26">
	<div class="left_corner" id="WC_ShipmentDisplay_div_27"></div>

	<div class="left_drop_down_shipment" id="WC_ShipmentDisplay_div_28"
		style="display: none">
		<span class="content_text"><label for="numberOfPaymentMethods"
			style="display: none"><fmt:message bundle="${storeText}"
					key="BILL_MULTIPLE_BILLING_MESSAGE" /></label> <select
			class="drop_down_billing" name="numberOfPaymentMethods"
			id="numberOfPaymentMethods"
			onchange="JavaScript:CheckoutPayments.setNumberOfPaymentMethods('1',this,'paymentSection');CheckoutPayments.reinitializePaymentObjects(this);">
				<c:set var="selectStr" value="" />
				<c:forEach var="i" begin="1" end="${numberOfPaymentMethods}">
					<c:if test="${i == totalExistingPaymentMethods}">
						<c:set var="selectStr" value='selected="selected"' />
					</c:if>
					<option value="1" <c:out value="${selectStr}" escapeXml="false"/>>
						<fmt:message bundle="${storeText}" key="BILL_PAYMENT_OPTIONS">
							<fmt:param value="${i}" />
						</fmt:message>
					</option>
					<c:set var="selectStr" value="" />
				</c:forEach>
		</select> </span>
	</div>
	<%-- Corresponds to content_header div --%>
	<%-- <div class="headingtext" id="WC_ShipmentDisplay_div_24">
		<span aria-level="1" class="main_header_text" role="heading"><fmt:message
				bundle="${storeText}" key="BILL_BILLING_INFO" /></span>
	</div> --%>
	<div class="right_corner" id="WC_ShipmentDisplay_div_29"></div>
</div>
<div wcType="RefreshArea" id="orderTotalAmountArea" widgetId="orderTotalAmountArea" declareFunction="declareOrderTotalController()" ></div>

<c:set var="punchoutPaymentAllowed" value="false" />
<flow:ifEnabled feature="PunchoutPayment">
	<c:set var="punchoutPaymentAllowed" value="true" />
</flow:ifEnabled>

<c:set var="PurchaseOrderEntryField" value="true"/>

<c:forEach var="i" begin="1" end="${numberOfPaymentMethods}" varStatus="status2">
	
	<c:choose>
		<c:when test="${!quickCheckoutProfileForPayment}">
			<c:set var="displayMethod" value="display:none" />
			<c:set var="existingPaymentInstance" value="${paymentInstruction.paymentInstruction[i-1]}"/>
			<c:set var="paymentMethodSelected" value="${existingPaymentInstance.payMethodId}"/>
			<c:set var="existingProtocolData" value="${existingPaymentInstance.protocolData}"/>
			<c:set var="isTokenization" value="${existingPaymentInstance.xpaym_tokenization}"/>
			<c:set var="paymentMethodBillingAddressId" value=""/>
			<c:set var="piAmount" value="${existingPaymentInstance.piAmount}"/>
			<%-- Show the block if this is first payment or if there are payment methods in subsequent blocks --%>
			<c:if test="${!empty paymentMethodSelected || i == 1}">
				<c:set var="displayMethod" value="display:block" />
			</c:if>
			<c:forEach var="protocolData" items="${existingProtocolData}">
				<c:choose>
					<c:when test="${protocolData.name eq 'cc_brand'}">
						<c:set var="cc_brand" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'cc_cvc'}">
						<c:set var="cc_cvc" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'expire_year'}">
						<c:set var="expire_year" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'expire_month'}">
						<c:set var="expire_month" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${isTokenization && protocolData.name eq 'display_value'}">
						<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
							<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							<wcf:param name="plainString" value="${protocolData.value}"/>
						</wcf:rest>
						<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />		
						<c:set var="display_value" value="${edpMaskBean.resultList[0].maskedString}" />					
					</c:when>			
					<c:when test="${isTokenization && protocolData.name eq 'payment_token'}">
						<c:set var="payment_token" value="${protocolData.value}"/>
					</c:when>
									
					<c:when test="${!isTokenization && protocolData.name eq 'account'}">
					   <wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
							<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							<wcf:param name="plainString" value="${protocolData.value}"/>
						</wcf:rest>
						<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
					</c:when>
					<c:when test="${protocolData.name eq 'paymentTCId'}">
						<c:set var="paymentTCId" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'check_routing_number'}">
						<c:set var="check_routing_number" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'CheckAccount_number'}">
						<c:set var="CheckAccount_number" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'billing_address_id'}">
						<c:set var="paymentMethodBillingAddressId" value="${protocolData.value}"/>
					</c:when>
				</c:choose>
			</c:forEach>
			<c:if test="${isTokenization && empty display_value && !empty payment_token && !empty paymentMethodSelected}">
			    <wcf:rest var="tokenData" url="store/{storeId}/cart/@self/payment_instruction/payment_token">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true" />
					<wcf:param name="payment_token" value="${payment_token}" />
					<wcf:param name="payment_method" value="${paymentMethodSelected}" />								
				</wcf:rest>						
				<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
					<wcf:param name="plainString" value="${tokenData.payment_token_data.display_value}"/>
				</wcf:rest>
				<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
				<c:set var="display_value" value="" />
			</c:if>
		</c:when>
		<c:otherwise>
			<%-- we should use quick checkout profile..--%>
			<c:set var="displayMethod" value="display:none" />
			<c:set var="paymentMethodSelected" value=""/>
			<c:set var="piAmount" value=""/>
			<%-- quick checkout profile will have only one payment option.. show the first div.. --%>
			<c:if test="${i == 1}">
				<c:set var="displayMethod" value="display:block" />
				<%-- Use order list data bean and get protocol data --%>
				<%-- get the "profile" order containing the default payment and billing info --%>
				<wcf:rest var="orderListBean" url="store/{storeId}/order" scope="request">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
					<wcf:param name="q" value="orderProfile"/>
					<wcf:param name="userId" value="${CommandContext.userId}"/>
					<wcf:param name="retrievalOrderStatus" value="Q"/>
					<wcf:param name="profileName" value="IBM_Summary_PaymentInfo"/>
				</wcf:rest>
				<c:forEach items="${orderListBean.resultList}" var="prof_orderBean" varStatus="status">
					<c:set var="payInfo" value="${prof_orderBean.paymentInfo}" />
					<c:if test="${!empty payInfo}">
						<c:set var="existingProtocolData" value="${payInfo}"  scope="request"/>
					</c:if>
					<c:forEach var="temp" items="${existingProtocolData}">
						<c:choose>
							<c:when test="${temp.key eq 'cc_brand'}">
								<c:set var="cc_brand" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'cc_cvc'}">
								<c:set var="cc_cvc" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'expire_year'}">
								<c:set var="expire_year" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'expire_month'}">
								<c:set var="expire_month" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'account'}">
								<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
									<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
									<wcf:param name="plainString" value="${temp.value}"/>
								</wcf:rest>
								<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
								<c:set var="unmaskedAccount" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'display_value'}">
								<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
									<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
									<wcf:param name="plainString" value="${temp.value}"/>
								</wcf:rest>
								<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
								<c:set var="unmaskedAccount" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'payment_token'}">
								<c:set var="payment_token" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'check_routing_number'}">
								<c:set var="check_routing_number" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'CheckAccount_number'}">
								<c:set var="CheckAccount_number" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'payment_method'}">
								<c:set var="paymentMethodSelected" value="${temp.value}"/>
							</c:when>
						</c:choose>
					</c:forEach>
					<c:set var="paymentMethodBillingAddressId" value="${prof_orderBean.billingAddressDataBean.addressId}"/>
				</c:forEach>
				<%--
				<c:if test="${empty account && !empty payment_token && !empty paymentMethodSelected}">
				    <wcf:rest var="tokenData" url="store/{storeId}/cart/@self/payment_instruction/payment_token">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true" />
						<wcf:param name="payment_token" value="${payment_token}" />
						<wcf:param name="payment_method" value="${paymentMethodSelected}" />								
					</wcf:rest>						
					<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
						<wcf:param name="plainString" value="${tokenData.payment_token_data.display_value}"/>
					</wcf:rest>
					<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
				</c:if>
				 --%>
				<%-- entire amount will be added to the first payment option in quick checkout profile --%>
				<%-- 
				<fmt:parseNumber var="piAmount" value="${order.grandTotal}"/>
				<c:set var="piAmount" value="${piAmount}"/> 
				--%>
				<c:set var="piAmount" value="${order.grandTotal}"/>
			</c:if>
		</c:otherwise>
	</c:choose>
<c:if test="${i == 1}">
	<div id="paymentSection<c:out value="${i}"/>" style="<c:out value="${displayMethod}"/>" >

		<div id="WC_CheckoutPaymentsAndBillingAddressf_div_1_<c:out value='${status2.count}'/>">
			<div id="billing_<c:out value='${i}'/>" class="billing<c:if test="${i >= 2}"> billing_border</c:if>">
				<c:if test="${numberOfPaymentMethods > 1}">
					<!-- Payment method number (payment1, payment2...) will be shown only if there are more than 1 payments..-->
					<%-- <div id="paymentHeading<c:out value="${i}"/>" class="payment_heading"> 
						<fmt:message bundle="${storeText}" key="PAYMENT_CAPS"/>
						<span id="numOfPaymentsIndicator<c:out value="${i}"/>"> <c:out value="${i}:"/></span>
					</div> --%>
				</c:if>
				<form class="col12 row" name="PaymentForm<c:out value="${i}"/>" id="PaymentForm<c:out value="${i}"/>" method="post" action="" onsubmit="javascript: return false;">
					<c:set var="paymentAreaNumber" value="${i}"/>
					<input type="hidden" value="<c:out value='${quickCheckoutProfileForPayment}'/>" id="quickCheckoutProfileForPayment_<c:out value='${i}'/>" name="quickCheckoutProfileForPayment"/>
					<input type="hidden" value="<c:out value='${paymentMethodBillingAddressId}'/>" id="selectedAddressId_<c:out value="${i}"/>" name="selectedAddressId_<c:out value="${i}"/>" />
					<input type="hidden" name="authToken" value="${authToken}" id="WC_CheckoutPaymentsAndBillingAddressf_input_authToken_<c:out value='${i}'/>"/>
					<input type="hidden" name="piId" value="" id="WC_CheckoutPaymentsAndBillingAddressf_piId_<c:out value='${i}'/>"/>
					<input type="hidden" name="paymentDataEditable" value="" id="WC_CheckoutPaymentsAndBillingAddressf_paymentDataEditable_<c:out value='${i}'/>"/>
					<input type="hidden" name="orderId" value="${order.orderId}" id="WC_CheckoutPaymentsAndBillingAddressf_orderId_<c:out value='${i}'/>"/>
					<input type="hidden" name="payment_token" value="${payment_token}" id="WC_CheckoutPaymentsAndBillingAddressf_payment_token_<c:out value='${i}'/>"/>
					<div class="col6 acol12">
						<div class="ordShipBillAddress">
						<p class="title shipAddTitle">
							<label>Billing Address</label>
						</p>
						<div class="ShopBillAddPadding" id="billingAddress<c:out value="${i}"/>" class="billing_address_container">
							<div wcType="RefreshArea" id = "billingAddressSelectBoxArea_<c:out value='${i}'/>" widgetId="billingAddressSelectBoxArea_<c:out value='${i}'/>" objectId='<c:out value="${i}"/>' declareFunction="declareBillingAddressSelectBoxAreaController('billingAddressSelectBoxArea_<c:out value='${i}'/>')"
								refreshurl = "<c:out value="${billingAddressDisplayURLs[i - 1]}"/>">
								<%out.flush();%>
									<c:import url="${env_jspStoreDir}/ShoppingArea/CheckoutSection/SingleShipment/BillingAddressDropDownDisplay.jsp">
										<c:param value="${paymentMethodBillingAddressId}" name="selectedAddressId"/>
										<c:param name="paymentAreaNumber" value="${i}"/>
										<c:param name="paymentMethodSelected" value="${paymentMethodSelected}"/>
									</c:import>
								<%out.flush();%>
							</div>
						</div>
						</div>
					</div>
					<script type="text/javascript">
						$(document).ready(function() {
							CheckoutPayments.setNumPaymentIndicator();
							
						});
					</script>
					<div class="col6 acol12">
						<div class="ordShipBillMethod">
						<p class="title shipAddTitle">
							<label>Billing Details</label>
						</p>
						<div class="billing_method" id="WC_CheckoutPaymentsAndBillingAddressf_div_2_<c:out value='${status2.count}'/>">
							
							<%--<p class="title"><fmt:message bundle="${storeText}" key="BILL_BILLING_METHOD_COLON"/></p> --%>
							<label for="payMethodId_<c:out value='${i}'/>"><span class="spanacce"><fmt:message bundle="${storeText}" key='ACCE_BILLING_METHOD2'><fmt:param value='${i}'/></fmt:message></span></label>
							<p>
								<input type="hidden" name="storeId" value="<c:out value="${storeId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_1_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="catalogId" value="<c:out value="${catalogId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_2_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="langId" value="<c:out value="${langId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_3_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="existingPiId" value="<c:out value="${existingPI }"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_4_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="unboundPiId" value="<c:out value="${unboundPI}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_4b_<c:out value='${status2.count}'/>"/>
								<jsp:useBean id="now" class="java.util.Date" />
								<input type="hidden" name="curr_year" value="<c:out value='${now.year + 1900}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_5_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="curr_month" value="<c:out value='${now.month + 1}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_6_<c:out value='${status2.count}'/>"/>
								<input type="hidden" name="curr_date" value="<c:out value='${now.date}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_7_<c:out value='${status2.count}'/>"/>
								<!-- Payment type promotion: onchange call the function CheckoutPayments.updateUnboundPaymentToOrder(); -->
								
								<select class="drop_down_billing" name="payMethodId" id="payMethodId_<c:out value='${i}'/>" 
									onchange="JavaScript:this.blur(); 
									CheckoutHelperJS.setOrderId('<c:out value='${usablePaymentInfo.orderId}'/>');
									 
									if ( (typeof(supportPaymentTypePromotions) == 'undefined') || (typeof(supportPaymentTypePromotions) != 'undefined' && !supportPaymentTypePromotions) ) { 
										CheckoutPayments.loadPaymentSnippet(this, <c:out value='${i}'/>); 
										CheckoutPayments.updatePaymentObject(<c:out value='${i}'/>, 'payMethodId');
									}
	
									if (typeof(supportPaymentTypePromotions) != 'undefined' && supportPaymentTypePromotions) {
											CheckoutPayments.updateUnboundPaymentToOrder(<c:out value="${i}"/>);
									}	                   
				                   
				                   ">
									<!--  Add one default Payment select option -->
									<option value="empty" selected="selected"><fmt:message bundle="${storeText}" key="BILL_BILLING_SELECT_BILLING_METHOD"/></option>
									<!-- Loop through available payment options and populate the select box -->
									<c:set var="attrPageName" value="${env_jspStoreDir}/Snippets/EDP/PaymentMethods/Empty.jsp" />
									<c:forEach var="payment" varStatus="paymentCounter" items="${usablePaymentInfo.usablePaymentInformation}">
									
										<c:set var="currentPaymentMethodName" value="${payment.paymentMethodName}"/>
										<c:if test="${currentPaymentMethodName ne 'ApplePay' && currentPaymentMethodName != 'ApplePay' && currentPaymentMethodName != 'PayInStore' && currentPaymentMethodName != 'CompatiblePayment' && (currentPaymentMethodName ne 'SimplePunchout' or (currentPaymentMethodName eq 'SimplePunchout' and punchoutPaymentAllowed))}">
											<c:if test="${paymentMethodSelected == payment.paymentMethodName && WCParam.fromPayPal ne 'true'}">
												<c:set var="selectStr" value='selected="selected"' />
												<c:set var="attrPageName" value="${env_jspStoreDir}/Snippets/EDP/PaymentMethods/${payment.xumet_attrPageName}.jsp" />
											</c:if>
											<c:if test="${currentPaymentMethodName == 'PayByAccount' && WCParam.fromPayPal eq 'true'}">
												<c:set var="selectStr" value='selected="selected"' />
												<c:set var="attrPageName" value="${env_jspStoreDir}/Snippets/EDP/PaymentMethods/${payment.xumet_attrPageName}.jsp" />
											</c:if>
											<c:if test="${currentPaymentMethodName == 'PayByAccount' && WCParam.fromPayPal ne 'true'}">
												<c:set var="selectStr" value='selected="selected"' />
												<c:set var="attrPageName" value="${env_jspStoreDir}/Snippets/EDP/PaymentMethods/${payment.xumet_attrPageName}.jsp" />
											</c:if>
											
											<option <c:out value="${selectStr}" escapeXml="false"/> value="${currentPaymentMethodName}<c:if test='${!empty payment.paymentTermConditionId}'><c:out value='_${payment.paymentTermConditionId}'/></c:if>">${payment.description} </option>
											<c:set var="selectStr" value="" />
											
										</c:if>
									</c:forEach>
								</select>
								
								<input type="hidden" name="buyerOrgDN" value="<c:out value="${order.orgDistinguishedName}"/>"/>
								
								<!-- This div is for Web2.0 Style -->
								<div wcType="RefreshArea" widgetId="paymentArea<c:out value="${i}"/>" declareFunction="declarePaymentAreaController('paymentArea<c:out value="${i}"/>')" id="paymentArea<c:out value="${i}"/>">
									<%out.flush();%>
										<c:import url="${attrPageName}">
											<c:param name="paymentAreaNumber" value= "${paymentAreaNumber}"/>
											<c:param name="cc_brand" value="${cc_brand}"/>
											<c:param name="cc_cvc" value="${cc_cvc}"/>
											<c:param name="expire_year" value="${expire_year}"/>
											<c:param name="expire_month" value="${expire_month}"/>
											<c:param name="account" value="${account}"/>
											<c:param name="check_routing_number" value="${check_routing_number}"/>
											<c:param name="CheckAccount_number" value="${CheckAccount_number}"/>
											<c:param name="piAmount" value="${piAmount}"/>
											<c:param name="edp_ProtocolData" value="${existingProtocolData}"/>
											<c:param name="paymentTCId" value="${paymentTCId}"/>
										</c:import>
									<%out.flush();%>
								</div> 
								<div class="selectHolder">
									<div>Cost Centre</div>
									<div>
									<select>
										<option value="${WCParam.costCentre }">${WCParam.costCentre }</option>
									</select>
									</div>
								</div> 
								<%@ include file="POSnippet.jspf" %>
							</p>
						</div>	
						</div>
					</div>

					<!-- Payment Method Ends Here --> 
				</form>
				<script src="https://secure.ewaypayments.com/scripts/eCrypt.min.js"></script>
			</div>
		</div>
	</div>
	</c:if>
</c:forEach>
<script>
$('#payMethodId_1').on('change', function() {
	  if(this.value === 'VISA' || this.value === 'Master Card' || this.value === 'AMEX'){
		  $(".ordShipBillAddress, .shipInfoShipMethod, .shipInfoRefreshArea, .ordShipBillMethod").css('height', '500px');
	  }
	  else{
		  $(".ordShipBillAddress, .shipInfoShipMethod, .shipInfoRefreshArea, .ordShipBillMethod").css('height', '360px');
	  }
	});
</script>
<!-- END CheckoutPaymentsAndBillingAddress.jspf -->

