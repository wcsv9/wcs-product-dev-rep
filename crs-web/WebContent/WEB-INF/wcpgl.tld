<?xml version="1.0" encoding="ISO-8859-1" ?>

<!--********************************************************************-->
<!--  Licensed Materials - Property of IBM                              -->
<!--                                                                    -->
<!--  WebSphere Commerce                                                -->
<!--                                                                    -->
<!--  (c) Copyright IBM Corp. 2013                                      -->
<!--                                                                    -->
<!--  US Government Users Restricted Rights - Use, duplication or       -->
<!--  disclosure restricted by GSA ADP Schedule Contract with IBM Corp. -->
<!--                                                                    -->
<!--********************************************************************-->

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com.xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">
	<description>
	IBM WebSphere Commerce Page Layout Tag Library.
	This tag library contains custom tags that support WebSphere Commerce Page Layout / JSP authoring.
	</description>
	<tlib-version>2.0</tlib-version>
	<short-name>wcpgl</short-name>
	<uri>http://commerce.ibm.com/pagelayout</uri>
	<tag>
		<description>
			This tag allows one or more widgets to be imported at a time. The
			widgets can be imported based on slotId parameter or widget identifier parameter.
			Preference will be give for slotId parameter. Widget definition will be fetched
			using the slotId and if no widgets can be found using the slotId,
			then widget identifier will be used to fetch the widget definition. Once
			the widget definition is found, the JSPPath in the widget definition
			will be used to import the widget.
			If widget definition cannot be found using slotId or widget identifier,
			then no widgets will be imported and only if debug mode is set to true,
			then error message will be displayed on store front. 
		</description>
		<name>widgetImport</name>
		<tag-class>com.ibm.commerce.store.pagelayout.internal.client.taglib.WidgetImportTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>
			slotId(s) of widget(s) to be imported
			</description>
			<name>slotId</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
			Widget identifiers of widget(s) to be imported
			</description>
			<name>identifier</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
				Widget uniqueId of widget(s) to be imported
			</description>
			<name>uniqueID</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		
		<attribute>
			<description>
				If debug is set to false, then no exception will be thrown or error widget will be displayed on store front, in case of failure to import widget.
			</description>
			<name>debug</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
			Variable name under which Page Design logical SDO object can be found. If this attribute is not provided, then by default value of PAGE_DESIGN_DETAILS_VAR will
			be used as the variable name to find the Page Design logical SDO object. If this attribute and PAGE_DESIGN_DETAILS_VAR is not defined, then the tag will not be able
			to access Page Layout logical SDO object.
			</description>
			<name>varPageDesignDetails</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
			Variable which will hold the name of the key used to check if the widget is imported before. Use this for singleton feature ( when a widget needs to be
			imported only once in a request scope even when there are multiple imports found in different JSPs. Subsequent imports will be ignored). Use this feature for widgets
			like EnvironmentSetup or SearchSetup. singletonKey will be used to identify whether a widget is already imported or not. So make sure that same value is used across
			all the widget imports which needs to be included only once.
			</description>
			<name>singletonKey</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>	
		<attribute>
			<description>
			If useIBMContextInSeparatedEnv is true, then the tag will work for remote store server.
			If useIBMContextInSeparatedEnv is false, then the tag will ignore the context value and work for local store server.
			</description>
			<name>useIBMContextInSeparatedEnv</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>	
		<!-- Following attributes are defined for c:import tag in c.tld of WAS Implementation. Since there is no way to extend the tld definitions, we have to redefine them again here -->
		<attribute>
		<description>
			The URL of the resource to import.
		</description>
		<name>url</name>
		<required>false</required>
		<rtexprvalue>true</rtexprvalue>
	    </attribute>
	    <attribute>
		<description>
			Name of the exported scoped variable for the
			resource's content. The type of the scoped
			variable is String.
		</description>
		<name>var</name>
		<required>false</required>
		<rtexprvalue>false</rtexprvalue>
	    </attribute>
	    <attribute>
		<description>
			Scope for var.
		</description>
		<name>scope</name>
		<required>false</required>
		<rtexprvalue>false</rtexprvalue>
	    </attribute>
	    <attribute>
		<description>
			Name of the exported scoped variable for the
			resource's content. The type of the scoped
			variable is Reader.
		</description>
		<name>varReader</name>
		<required>false</required>
		<rtexprvalue>false</rtexprvalue>
	    </attribute>
	    <attribute>
		<description>
			Name of the context when accessing a relative
			URL resource that belongs to a foreign
			context.
		</description>
		<name>context</name>
		<required>false</required>
		<rtexprvalue>true</rtexprvalue>
	    </attribute>
	    <attribute>
		<description>
			Character encoding of the content at the input
			resource.
		</description>
		<name>charEncoding</name>
		<required>false</required>
		<rtexprvalue>true</rtexprvalue>
	    </attribute>
	</tag>	
	
	<tag>
		<description>
		Adds a named parameter value to the parent tag. The param tag can be specified
		as a sub-tag of &quot;widgetImport&quot;.
		</description>
		<name>param</name>
		<tag-class>com.ibm.commerce.foundation.internal.client.taglib.ParamTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>
			The name of the parameter.
			</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description>
			The parameter value.
			</description>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>

	<tag>
		<description>
			This tag includes the javascript fils associated with the widgets. It loops through all
			the widgets present in the layout and includes javascript files associated with each one of them.
			It makes sure that JS files are included only once in the entire layout.
		</description>
		<name>jsInclude</name>
		<tag-class>com.ibm.commerce.store.pagelayout.internal.client.taglib.JSIncludeTag</tag-class>
		<body-content>empty</body-content>
		
        
		<attribute>
			<description>
				Variable name under which Page Design logical SDO object can be found. If this attirbute is not provided, then by default value of PAGE_DESIGN_DETAILS_VAR will
				be used as the variable name to find the Page Design logical SDO object. If this attribute and PAGE_DESIGN_DETAILS_VAR is not defined, then the tag will not be able
				to access Page Design logical SDO object.
			</description>
			<name>varPageDesignDetails</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>	

	<tag>	
		<name>pageLayoutCache</name>
		<tag-class>com.ibm.commerce.store.pagelayout.cache.PageLayoutCacheTag</tag-class>
		<body-content>empty</body-content>
		<description>This tag allows page layout JSPs to dynamically generate and set Dependency IDs so that the layout JSP will be invalidated when the page layout design associated with this layout JSP changes.</description>
		<attribute>
			<name>pageLayoutId</name>			
				<required>false</required>			
				<rtexprvalue>true</rtexprvalue>	
				<description>If this value is set, then use this layoutId while creating the dependency rules. If this is not set, then layoutId will be retrieved from pageDesignData object set. If pageDesignData object is also not set, then no dependency rules will be set.</description>
		</attribute>
		<attribute>
			<name>pageId</name>			
				<required>false</required>			
				<rtexprvalue>true</rtexprvalue>	
				<description>If this value is set, then use this pageId while creating the dependency rules. This value is expected to be set for content pages which will have dependency on PLPAGE table.</description>
		</attribute>
	</tag>	
	
	<tag>	
		<name>pageLayoutWidgetCache</name>
		<tag-class>com.ibm.commerce.store.pagelayout.cache.PageLayoutWidgetCacheTag</tag-class>
		<body-content>empty</body-content>
		<description>This tag sets the do-not-consume attribute value of the widget cache entry to false if it finds a dependencyId with name ignoreDoNotConsume in the cache definition.</description>
	</tag>		

</taglib>
