<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2011, 2015 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>

<fmt:parseNumber var = "moqQuantity" type = "number" value = "${getAuxdesc.quantity}" />
<c:choose>
<c:when test="${fromSearch eq 'ListPage' || fromSearch eq 'GridPage' }">
	<c:set var="per" value=""/>
</c:when>
<c:otherwise>
	<c:set var="per" value="PER"/>
</c:otherwise>
</c:choose>

<c:if test="${empty catalogEntryID && !empty catEntryIdentifier}">
	<c:set var="catalogEntryID" value="${catEntryIdentifier}" />
</c:if>
<c:if test="${empty catalogEntryID && !empty WCParam.productId}">
	<c:set var="catalogEntryID" value="${fn:escapeXml(WCParam.productId)}" />
</c:if>

<c:set var="spacelessEmsName_Price" value=""/>
<c:if test="${!empty param.emsName && param.emsName != null && param.pageView == 'grid'}">
	<c:set var="spacelessEmsName_Price"><c:out value="${fn:replace(param.emsName, ' ', '')}"/></c:set>
</c:if>

<c:choose>
	<%-- If the price is unavailable, print out the corresponding message --%>
	<c:when test="${!empty emptyPriceString}">
		<span id="offerPrice_${catalogEntryID}" class="price" itemprop="price"> 
			<c:out value="${emptyPriceString}"  escapeXml="false"/>
		</span>
	</c:when>
	
	<%-- If the price string has been set, then we simply print it out. --%>
	<c:when test="${!empty priceString}">
		<%-- Price as configured should be displayed only on dynamic kit page and not in category list or grid view --%>
		<c:if test="${type eq 'dynamickit' and pageView eq 'DynamicDisplayView'}">
			<span class="configured"><wcst:message key="DK_PRICE_AS_CONFIGURED" bundle="${widgetText}"/>&nbsp;</span>
		</c:if>
		<%--
		<c:if test="${!empty strikedPriceString}">
			<span id="listPrice_${spacelessEmsName_Price}${catalogEntryID}" class="old_price">
				<c:out value="${strikedPriceString}"  escapeXml="false"/>
			</span>
		</c:if>
		--%>
		<%-- start Gst changes --%>

		<c:set var="enableGST" value="false"/>
		<flow:ifEnabled feature="ONExGstPriceDisplay">
			<c:set var="enableGST" value="true"/>
		</flow:ifEnabled> 


		<c:if test="${enableGST eq 'true'}">
		
			<wcf:rest var="catEntry1" url="store/12410/productview/getcatalogEntryField1/${catalogEntryID}" scope="request">
					<wcf:var name="catId" value="${catalogEntryID}"/>
			</wcf:rest>


			<c:choose>
				<c:when test="${catEntry1.field1 eq 0}">					
					<c:set var="tot" value="0"/>			
				</c:when>

				<c:otherwise>	
					<c:choose>
						<c:when test="${fn:contains(priceString, 'to')}">	

						</c:when>
						<c:otherwise>
						   <c:choose>
						   		<c:when test="${fn:contains(priceString, 'to')}">	
						   			<c:set var="splitString" value="${fn:split(priceString, 'to')}" />
									<c:forEach var="prices" items="${splitString}" varStatus="count">
										<c:set var="temp1" value="${fn:replace(prices,'$','')}" />
										<c:set var="temp2" value="${fn:replace(temp1,',','')}" />
										<c:set var="price" value="${temp2}" />
										<c:set var="acPrice" value="${temp2 }" />									
							
							
											<c:set var="price" value="${(price - (price / 1.1)) }" />
									<c:if test="${count.count == 1}">
										<c:set var="exGstPrice1" value="${(acPrice - price) }" />
									</c:if>		
									<c:if test="${count.count == 2}">
										<c:set var="exGstPrice2" value="${(acPrice - price) }" />
									</c:if>														
									</c:forEach>						   		

						   		</c:when>
						   		
						   		<c:otherwise>
									<c:set var="temp1" value="${fn:replace(priceString,'$','')}" />
									<c:set var="temp2" value="${fn:replace(temp1,',','')}" />
									<c:set var="price" value="${temp2}" />
									<c:set var="acPrice" value="${temp2 }" />
									
										<c:set var="price" value="${(price - (price / 1.1)) }" />
									<c:set var="exGstPrice" value="${(acPrice - price) }" />	

						   		</c:otherwise>
						   		
						   </c:choose>
						</c:otherwise>
					</c:choose>
				</c:otherwise>
			</c:choose>	
		</c:if>			

				<%-- end Gst changes --%>

		<span id="offerPrice_${spacelessEmsName_Price}${catalogEntryID}" class="price" itemprop="price">
		
			<c:if test="${enableGST ne 'true'}">
			<c:out value="${priceString}" escapeXml="false"/> 
			
			<%-- Code to Fetch Unit of Measure --%>
			
			<c:choose>
				<c:when test="${getProductRefrence.field4 ne '0' && !empty getProductRefrence.field4 }">

					<span style="padding-right: 20px;font-size: 20px;"><c:out value="${per}"/>&nbsp;<c:out value="${getProductRefrence.field4 }"/></span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
			
			<c:choose>
				<c:when test="${moqQuantity ne '0' && !empty moqQuantity}">
					<c:set var="temp1" value="${fn:replace(priceString,'$','')}" />
					<span style="padding-right: 20px;font-size: 20px;">Total(${moqQuantity }):<fmt:formatNumber value="${(temp1 *  moqQuantity)}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> </span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
			<%-- Code to Fetch Unit of Measure --%>
			
			<c:set var="productInfoPrice" value="${priceString}"/>
			</c:if>
			
			<c:if test="${enableGST eq 'true'}">
			
				<c:choose>
					<c:when test="${catalogEntry3.field1 eq 0}">
						<c:out value="${priceString}" escapeXml="false"/>
						
					<%-- Code to Fetch Unit of Measure --%>	
						
					<c:choose>
						<c:when test="${getProductRefrence.field4 ne '0' && !empty getProductRefrence.field4 }">
							<span style="padding-right: 20px;font-size: 20px;"><c:out value="${per}"/>&nbsp; <c:out value="${getProductRefrence.field4 }"/></span>
						</c:when>
						<c:otherwise>
							<span class="label2"></span>
						</c:otherwise>
					</c:choose>
					<c:choose>
						<c:when test="${moqQuantity ne '0' && !empty moqQuantity}">
							<c:set var="temp1" value="${fn:replace(priceString,'$','')}" />
							<span style="padding-right: 20px;font-size: 20px;">Total(${moqQuantity }):<fmt:formatNumber value="${(temp1 *  moqQuantity)}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> </span>
		
						</c:when>
						<c:otherwise>
							<span class="label2"></span>
						</c:otherwise>
					</c:choose>
					<%-- Code to Fetch Unit of Measure --%>
					
					<c:set var="productInfoPrice" value="${priceString}"/>					
					</c:when>
					<c:otherwise>
						<c:out value="${priceString}" escapeXml="false"/>
					
						<%-- Code to Fetch Unit of Measure --%>	
							
						<c:choose>
							<c:when test="${getProductRefrence.field4 ne '0' && !empty getProductRefrence.field4 }">
								<span style="padding-right: 20px;font-size: 20px;"><c:out value="${per}"/>&nbsp; <c:out value="${getProductRefrence.field4 }"/></span>
							</c:when>
							<c:otherwise>
								<span class="label2"></span>
							</c:otherwise>
						</c:choose>
						<c:choose>
							<c:when test="${moqQuantity ne '0' && !empty moqQuantity}">
								<c:set var="temp1" value="${fn:replace(priceString,'$','')}" />
								<span style="padding-right: 20px;font-size: 20px;">Total(${moqQuantity }):<fmt:formatNumber value="${(temp1 *  moqQuantity)}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> </span>
			
							</c:when>
							<c:otherwise>
								<span class="label2"></span>
							</c:otherwise>
						</c:choose>
						<%-- Code to Fetch Unit of Measure --%>					
						<br/> <br/>
						
						<span class="ex-gst">
						
							<c:out value="Ex. GST :" />
							<c:if test="${not empty exGstPrice}">
							
							<span class="price">
								<fmt:formatNumber value="${exGstPrice}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> 
							</span>
							
							</c:if>
							
							<c:if test="${not empty exGstPrice1}">
							
								<span class="price" style="font-size:15px;">
										<fmt:formatNumber value="${exGstPrice1}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
										<c:out value="${CurrencySymbol}"/> 
										to 
										<fmt:formatNumber value="${exGstPrice2}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
										<c:out value="${CurrencySymbol}"/>								
								</span>
							
							</c:if>
							
						</span>
					</c:otherwise>
				</c:choose>
			
			</c:if>
			
		</span>
	</c:when>
	
	<%-- If the list price does not exist or is smaller than the offer price, print out both the offer price only. --%>
	<c:when test="${dataBean && (!listPriced || (empty displayPrice || displayPrice <= offerPrice))}">
		<span id="offerPrice_${spacelessEmsName_Price}${catalogEntryID}" class="price" itemprop="price">
			<c:out value="${offerPriceString}"  escapeXml="false"/> 
			<c:choose>
				<c:when test="${getProductRefrence.field4 ne '0' && !empty getProductRefrence.field4 }">

					<span style="padding-right: 20px;font-size: 20px;"><c:out value="${per}"/>&nbsp; <c:out value="${getProductRefrence.field4 }"/></span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
			<c:choose>
				<c:when test="${moqQuantity ne '0' && !empty moqQuantity}">
					<c:set var="temp1" value="${fn:replace(priceString,'$','')}" />
					<span style="padding-right: 20px;font-size: 20px;">Total(${moqQuantity }):<fmt:formatNumber value="${(temp1 *  moqQuantity)}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> </span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
		</span>
		<c:set var="productInfoPrice" value="${offerPriceString}"/>
	</c:when>
	
	<c:otherwise>
		<span id="listPrice_${spacelessEmsName_Price}${catalogEntryID}" class="old_price">
			<c:out value="${displayPriceString}" escapeXml="false"/>
		</span>
		<span id="offerPrice_${spacelessEmsName_Price}${catalogEntryID}" class="price" itemprop="price">
			&nbsp;<c:out value="${offerPriceString}"  escapeXml="false"/> 
			<c:choose>
				<c:when test="${getProductRefrence.field4 ne '0' && !empty getProductRefrence.field4}">

					<span style="padding-right: 20px;font-size: 20px;"><c:out value="${per}"/>&nbsp; <c:out value="${getProductRefrence.field4 }"/></span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
			<c:choose>
				<c:when test="${moqQuantity ne '0' && !empty moqQuantity}">
					<c:set var="temp1" value="${fn:replace(offerPriceString,'$','')}" />
					<span style="padding-right: 20px;font-size: 20px;">Total(${moqQuantity }):<fmt:formatNumber value="${(temp1 *  moqQuantity)}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
								<c:out value="${CurrencySymbol}"/> </span>

				</c:when>
				<c:otherwise>
					<span class="label2"></span>
				</c:otherwise>
			</c:choose>
		</span>
		<c:set var="productInfoPrice" value="${offerPriceString}"/>
	</c:otherwise>
</c:choose>


<!-- Start Loyalty Points Changes By Ali Raza -->	

<c:if test="${userType != 'G'}">
		<c:choose>
			<c:when test="${fn:contains(loyaltyPartNumber, 'i')}">
			</c:when>
			<c:otherwise>
				<c:set var="i" value="i"/>
				<c:set var="loyaltyPartNumber" value="${loyaltyPartNumber}${i }"/>
			</c:otherwise>
		</c:choose>
		
		<c:if test="${sessionScope.state eq 'R' && sessionScope.loyaltyEnabled eq 'true' && sessionScope.content eq 'true'  || sessionScope.state eq 'WCS' && sessionScope.content eq 'true' }"> 
			
			<c:choose>
				<c:when test="${empty offerPriceString}">
				
					<wcf:rest var="loyaltyPointsForProduct" url="store/{storeId}/loyalty/getLoyaltyPointsByCatentryId/{catentryId}/{unitPrice}/{itemQty}/{orderItemId}/{flag}/{catalogId}" scope="request">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
						<wcf:var name="catentryId" value="${loyaltyPartNumber }" encode="true"/>
						<wcf:var name="unitPrice" value="$0.0" encode="true"/>
						<wcf:var name="itemQty" value="1" encode="true"/>
						<wcf:var name="orderItemId" value="0" encode="true"/>
						<wcf:var name="flag" value="price" encode="true"/>
						<wcf:var name="catalogId" value="${WCParam.catalogId}" encode="true"/>
					</wcf:rest>
					
				</c:when>
				<c:otherwise>
				
					<wcf:rest var="loyaltyPointsForProduct" url="store/{storeId}/loyalty/getLoyaltyPointsByCatentryId/{catentryId}/{unitPrice}/{itemQty}/{orderItemId}/{flag}/{catalogId}" scope="request">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
						<wcf:var name="catentryId" value="${loyaltyPartNumber }" encode="true"/>
						<wcf:var name="unitPrice" value="${offerPriceString}" encode="true"/>
						<wcf:var name="itemQty" value="1" encode="true"/>
						<wcf:var name="orderItemId" value="0" encode="true"/>
						<wcf:var name="flag" value="price" encode="true"/>
						<wcf:var name="catalogId" value="${WCParam.catalogId}" encode="true"/>
					</wcf:rest>
					
				</c:otherwise>
			</c:choose>	
				
			<fmt:parseNumber var="productWiseLoyaltyPoints" integerOnly="true" type="number" value="${loyaltyPointsForProduct.loyaltyPoints}" />
				
			<input type="hidden" name="loyCons" id="loyCons" value="<c:out value="${loyaltyPointsForProduct.loyaltyconstant}" />"  />
			<input type="hidden" name="itemPrice" id="itemPrice" value="<c:out value="${loyaltyPointsForProduct.unitPrice}" />"  />
			<c:if test="${productWiseLoyaltyPoints != null && productWiseLoyaltyPoints != 0 && WCParam.storeId ne '11901'}">							
				<div class="earn_upoint_listView">
					
					
					Earn 
					<c:out value="${productWiseLoyaltyPoints }" />
					UPoints
						
				</div>
			</c:if>
			
			<c:if test="${loyaltyPointsForProduct.redeemable}">
				<c:set var="isRedeem1" value="true"/>
			
				<div class="redeem_upoint_listView">
					<input type="hidden" name="redeemValue_<c:out value='${catalogEntryID}'/>" id="redeemValue_<c:out value='${catalogEntryID}'/>" value="<c:out value='${loyaltyPointsForProduct.redeemValue}' />" />
					Redeem
					
					<fmt:parseNumber var="redeemP" integerOnly="true" type="number" value="${loyaltyPointsForProduct.redeemValue}" />
					<c:out value="${redeemP}" />											
					
					UPoints
				</div>
			</c:if> 
			<c:remove var="productWiseLoyaltyPoints"/>
			<c:remove var="loyaltyPointsForProduct"/>
		</c:if>
</c:if>
<c:choose>
	<c:when test="${empty offerPriceString}">
		<input type="hidden" name="loyCons" id="loyCons" value="0"  />
		<input type="hidden" name="itemPrice" id="itemPrice" value="0.00"  />			
	</c:when>
	<c:otherwise>
		<input type="hidden" name="loyCons" id="loyCons" value="0"  />
		<input type="hidden" name="itemPrice" id="itemPrice" value="${offerPriceString}"  />	
	</c:otherwise>
</c:choose>
		
<!-- End Loyalty Points Changes By Ali Raza -->	



<c:if test="${not empty localizedQuantityPriceMap}">
	<div class="item_spacer_3px"></div>
	<div class="bulk-ico"></div>
	<div id="priceRange<c:out value="_${catalogEntryID}"/>" class="bulk-price-box">
	<div class="bulk-heading">Bulk Pricing Available</div>
	<div class="bulk-qty">Quantity</div>
		<div class="bulk-price">Price <span>(per item)</span></div>
		<div class="bulk-line"></div>
<%-- 		<div><wcst:message key='PQ_PURCHASE' bundle="${widgetText}"/></div> --%>
		<c:forEach items="${localizedQuantityPriceMap}" varStatus="aStatus">
			<div class="bulk-qty">
				<c:out value="${aStatus.current.key}" />
			</div>
			<div class="bulk-price">
				<c:set var="priceKey">${aStatus.count}</c:set>
				<span id="price<c:out value="_${catalogEntryID}"/><c:out value="_${priceKey}"/>" class="price">
					<c:out value="${aStatus.current.value}" escapeXml="false"/>
				</span>
			</div>

		</c:forEach>
<div class="clear"></div>
	</div>
</c:if>

<%-- If someother component has not created a hidden field with this ID, then create it. This will be used by other components like miniShopCart --%>
<c:set var="hiddenFieldName" value="ProductInfoPrice_${spacelessEmsName_Price}${catalogEntryID}"/>
<c:if test="${!fn:contains(env_hiddenFieldsList, hiddenFieldName)}">
	<c:if test="${!empty productInfoPrice}">
		<input type="hidden" id="${hiddenFieldName}" value="${fn:escapeXml(productInfoPrice)}"/>
		<c:set var="env_hiddenFieldsList" value="${env_hiddenFieldsList},${hiddenFieldName}" scope="request"/>
	</c:if>
</c:if>
<input type="hidden" id="ProductInfoPrice_${spacelessEmsName_Price}${catalogEntryID}" value="${offerPriceString}"/>